{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "my-first-synapse-learning-workspace"
		},
		"ls_another_datalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_another_datalake'"
		},
		"my-first-synapse-learning-workspace-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'my-first-synapse-learning-workspace-WorkspaceDefaultSqlServer'"
		},
		"KeyValutLS_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://brian-keyvault-202211.vault.azure.net/"
		},
		"SQLdb_database01_LS_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "SQL-Database01-connection-str"
		},
		"ls_another_datalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://learningazurestorageac.dfs.core.windows.net/"
		},
		"my-first-synapse-learning-workspace-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakeforlearningasa.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/DailySQLPoolBackup')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "TurnOnSQLPool",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Synapse/workspaces/',pipeline().parameters.WorkspaceName,'/sqlPools/',pipeline().parameters.SQLPoolName,'/resume?api-version=2019-06-01-preview')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {},
							"body": "Resume",
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					},
					{
						"name": "CopyFromSQLpoolToDataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TurnOnSQLPool",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DedicatedPool1_CustomerTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Customer_Data_From_SQL_Pool",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TurnOffSQLpool",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CopyFromSQLpoolToDataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Synapse/workspaces/',pipeline().parameters.WorkspaceName,'/sqlPools/',pipeline().parameters.SQLPoolName,'/pause?api-version=2019-06-01-preview')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {},
							"body": "Pause",
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ResourceGroup": {
						"type": "string",
						"defaultValue": "learningsynapseresourcegrp"
					},
					"SubscriptionID": {
						"type": "string",
						"defaultValue": "ef6d64e9-c558-4834-b4c6-00d1f4906fb5"
					},
					"WorkspaceName": {
						"type": "string",
						"defaultValue": "my-first-synapse-learning-workspace"
					},
					"SQLPoolName": {
						"type": "string",
						"defaultValue": "DedicatedPool1"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-23T10:02:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/DedicatedPool1_CustomerTable')]",
				"[concat(variables('workspaceId'), '/datasets/CSV_Customer_Data_From_SQL_Pool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Data Lake SQL Database Integration')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DataLakeToSQLDatabase",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "first_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "last_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "age",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Age",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Person_csv_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PersonSQL_database",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DatabaseToDataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataLakeToSQLDatabase",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "PersonSQL_database",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BackupDataCSV",
								"type": "DatasetReference",
								"parameters": {
									"file_name": "person"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Person_csv_dataset')]",
				"[concat(variables('workspaceId'), '/datasets/PersonSQL_database')]",
				"[concat(variables('workspaceId'), '/datasets/BackupDataCSV')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ETL job 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "DataFlow ETL",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ExtractFromDataLakeLoadToSQLpool",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ContractDataset": {},
									"PersonalInfoDataset": {},
									"sink1": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "my-first-synapse-learning-workspace-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								},
								"folderPath": "users/staging"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-23T10:16:56Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/ExtractFromDataLakeLoadToSQLpool')]",
				"[concat(variables('workspaceId'), '/linkedServices/my-first-synapse-learning-workspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Load SQLPool to DataLake')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "CopyDataFromSQLpoolToDataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DedicatedPool1_CustomerTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CSV_Customer_Data_From_SQL_Pool",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-23T10:18:36Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DedicatedPool1_CustomerTable')]",
				"[concat(variables('workspaceId'), '/datasets/CSV_Customer_Data_From_SQL_Pool')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PauseResume')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Get SQL Pool List",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Synapse/workspaces/',pipeline().parameters.WorkspaceName,'/sqlPools?api-version=2019-06-01-preview')",
								"type": "Expression"
							},
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com/"
							}
						}
					},
					{
						"name": "Filter SQL pool",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get SQL Pool List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get SQL Pool List').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@not(endswith(item().name,'prod'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter SQL pool",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter SQL pool').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CheckState",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Synapse/workspaces/',pipeline().parameters.WorkspaceName,'/sqlPools/',item().name,'?api-version=2019-06-01-preview')",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "GET",
										"headers": {},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								},
								{
									"name": "State-PauseOrResume",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "CheckState",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@concat(activity('CheckState').output.properties.status,'-',pipeline().parameters.PauseOrResume)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "Paused-Resume",
												"activities": [
													{
														"name": "SQLPoolResume",
														"type": "WebActivity",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"url": {
																"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Synapse/workspaces/',pipeline().parameters.WorkspaceName,'/sqlPools/',activity('CheckState').output.name,'/resume?api-version=2019-06-01-preview')",
																"type": "Expression"
															},
															"connectVia": {
																"referenceName": "AutoResolveIntegrationRuntime",
																"type": "IntegrationRuntimeReference"
															},
															"method": "POST",
															"headers": {},
															"body": "Pause and Resume",
															"authentication": {
																"type": "MSI",
																"resource": "https://management.azure.com/"
															}
														}
													}
												]
											},
											{
												"value": "Online-Pause",
												"activities": [
													{
														"name": "SQLPoolPause",
														"type": "WebActivity",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"url": {
																"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.Synapse/workspaces/',pipeline().parameters.WorkspaceName,'/sqlPools/',activity('CheckState').output.name,'/pause?api-version=2019-06-01-preview')",
																"type": "Expression"
															},
															"connectVia": {
																"referenceName": "AutoResolveIntegrationRuntime",
																"type": "IntegrationRuntimeReference"
															},
															"method": "POST",
															"headers": {},
															"body": "Pause and Resume",
															"authentication": {
																"type": "MSI",
																"resource": "https://management.azure.com/"
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ResourceGroup": {
						"type": "string",
						"defaultValue": "learningsynapseresourcegrp"
					},
					"SubscriptionID": {
						"type": "string",
						"defaultValue": "ef6d64e9-c558-4834-b4c6-00d1f4906fb5"
					},
					"WorkspaceName": {
						"type": "string",
						"defaultValue": "my-first-synapse-learning-workspace"
					},
					"SQLPoolName": {
						"type": "string",
						"defaultValue": "DedicatedPool1"
					},
					"PauseorResume": {
						"type": "string",
						"defaultValue": "Pause"
					}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-23T10:02:42Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/BackupDataCSV')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "my-first-synapse-learning-workspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().file_name, '_backup.csv')",
							"type": "Expression"
						},
						"fileSystem": "users"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/my-first-synapse-learning-workspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CSV_Customer_Data_From_SQL_Pool')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "my-first-synapse-learning-workspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(\n\n    'customer_data_',\n\n    utcnow(),\n\n    '.csv'\n)",
							"type": "Expression"
						},
						"fileSystem": "dev"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/my-first-synapse-learning-workspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Contract_dataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_another_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "contracts.parquet",
						"fileSystem": "employees"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "contract_no",
						"type": "UTF8"
					},
					{
						"name": "account_no",
						"type": "UTF8"
					},
					{
						"name": "phone_no",
						"type": "INT64"
					},
					{
						"name": "plan_type",
						"type": "UTF8"
					},
					{
						"name": "plan_id",
						"type": "UTF8"
					},
					{
						"name": "handset_model",
						"type": "UTF8"
					},
					{
						"name": "voucher_amount",
						"type": "DOUBLE"
					},
					{
						"name": "duration",
						"type": "INT64"
					},
					{
						"name": "contract_start_date",
						"type": "TIMESTAMP_MICROS"
					},
					{
						"name": "contract_end_date",
						"type": "TIMESTAMP_MICROS"
					},
					{
						"name": "monthly_charge",
						"type": "INT64"
					},
					{
						"name": "voice_cap",
						"type": "INT64"
					},
					{
						"name": "data_cap",
						"type": "INT64"
					},
					{
						"name": "data_speed",
						"type": "UTF8"
					},
					{
						"name": "agent_name",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_another_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DedicatedPool1_CustomerTable')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "my-first-synapse-learning-workspace-WorkspaceDefaultSqlServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "DedicatedPool1"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "contract_no",
						"type": "nvarchar"
					},
					{
						"name": "account_no",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "gender",
						"type": "nvarchar"
					},
					{
						"name": "phone_no",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "hkid",
						"type": "nvarchar"
					},
					{
						"name": "duration",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "monthly_charge",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "voucher_amount",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "contract_sum",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "gender_totalsum_rank",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Customer"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/my-first-synapse-learning-workspace-WorkspaceDefaultSqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PersonSQL_database')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLdb_database01_LS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "persons"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQLdb_database01_LS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Person_csv_dataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "my-first-synapse-learning-workspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "persons.csv",
						"fileSystem": "users"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "age",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/my-first-synapse-learning-workspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Personal_info_dataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "my-first-synapse-learning-workspace-WorkspaceDefaultStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "personal_info.parquet",
						"fileSystem": "users"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "account_no",
						"type": "UTF8"
					},
					{
						"name": "last_name",
						"type": "UTF8"
					},
					{
						"name": "first_name",
						"type": "UTF8"
					},
					{
						"name": "hkid",
						"type": "UTF8"
					},
					{
						"name": "contact_no",
						"type": "INT64"
					},
					{
						"name": "date_of_birth",
						"type": "TIMESTAMP_MICROS"
					},
					{
						"name": "gender",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					},
					{
						"name": "mail_district",
						"type": "UTF8"
					},
					{
						"name": "home_address",
						"type": "UTF8"
					},
					{
						"name": "work_address",
						"type": "UTF8"
					},
					{
						"name": "industry",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/my-first-synapse-learning-workspace-WorkspaceDefaultStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KeyValutLS')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyValutLS_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLdb_database01_LS')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyValutLS",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('SQLdb_database01_LS_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/KeyValutLS')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_another_datalake')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_another_datalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_another_datalake_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/my-first-synapse-learning-workspace-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('my-first-synapse-learning-workspace-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/my-first-synapse-learning-workspace-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('my-first-synapse-learning-workspace-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DailyDataBackupSchedule')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-11-24T12:20:00",
						"timeZone": "China Standard Time",
						"schedule": {
							"minutes": [
								20
							],
							"hours": [
								14
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ExtractFromDataLakeLoadToSQLpool')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Contract_dataset",
								"type": "DatasetReference"
							},
							"name": "ContractDataset"
						},
						{
							"dataset": {
								"referenceName": "Personal_info_dataset",
								"type": "DatasetReference"
							},
							"name": "PersonalInfoDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DedicatedPool1_CustomerTable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ContractJoinPersonal"
						},
						{
							"name": "SelectTargetColumn"
						},
						{
							"name": "ContractSum"
						},
						{
							"name": "GenderContractSumRank"
						}
					],
					"scriptLines": [
						"source(output(",
						"          contract_no as string,",
						"          account_no as string,",
						"          phone_no as long,",
						"          plan_type as string,",
						"          plan_id as string,",
						"          handset_model as string,",
						"          voucher_amount as double,",
						"          duration as long,",
						"          contract_start_date as timestamp,",
						"          contract_end_date as timestamp,",
						"          monthly_charge as long,",
						"          voice_cap as long,",
						"          data_cap as long,",
						"          data_speed as string,",
						"          agent_name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> ContractDataset",
						"source(output(",
						"          account_no as string,",
						"          last_name as string,",
						"          first_name as string,",
						"          hkid as string,",
						"          contact_no as long,",
						"          date_of_birth as timestamp,",
						"          gender as string,",
						"          email as string,",
						"          mail_district as string,",
						"          home_address as string,",
						"          work_address as string,",
						"          industry as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> PersonalInfoDataset",
						"ContractDataset, PersonalInfoDataset join(ContractDataset@account_no == PersonalInfoDataset@account_no,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> ContractJoinPersonal",
						"ContractJoinPersonal select(mapColumn(",
						"          contract_no,",
						"          account_no = ContractDataset@account_no,",
						"          last_name,",
						"          first_name,",
						"          gender,",
						"          phone_no,",
						"          hkid,",
						"          duration,",
						"          monthly_charge,",
						"          voucher_amount",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectTargetColumn",
						"SelectTargetColumn derive(contract_sum = monthly_charge*duration) ~> ContractSum",
						"ContractSum window(over(gender),",
						"     desc(contract_sum, true),",
						"     gender_TotalSum_Rank = rank()) ~> GenderContractSumRank",
						"GenderContractSumRank sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          contract_no as string,",
						"          account_no as string,",
						"          last_name as string,",
						"          first_name as string,",
						"          gender as string,",
						"          phone_no as decimal(19,4),",
						"          hkid as string,",
						"          duration as decimal(19,4),",
						"          monthly_charge as decimal(19,4),",
						"          voucher_amount as decimal(19,4),",
						"          contract_sum as decimal(19,4),",
						"          gender_totalsum_rank as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     staged: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Contract_dataset')]",
				"[concat(variables('workspaceId'), '/datasets/Personal_info_dataset')]",
				"[concat(variables('workspaceId'), '/datasets/DedicatedPool1_CustomerTable')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": " CREATE TABLE [dbo].[Customer]\n (\n     [contract_no] NVARCHAR(4000),\n     [account_no] NVARCHAR(4000),\n     [last_name] NVARCHAR(4000),\n     [first_name] NVARCHAR(4000),\n     [gender] NVARCHAR(4000),\n     [phone_no] NUMERIC(19,4),\n     [hkid] NVARCHAR(4000),\n     [duration] NUMERIC(19,4),\n     [monthly_charge] NUMERIC(19,4),\n     [voucher_amount] NUMERIC(19,4),\n     [contract_sum]  NUMERIC(19,4),\n     [gender_totalsum_rank] INT\n )\n WITH\n (\n     DISTRIBUTION = HASH ( [contract_no] ),\n     CLUSTERED COLUMNSTORE INDEX\n )",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "DedicatedPool1",
						"poolName": "DedicatedPool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\nSELECT TOP (100) [contract_no]\n,[account_no]\n,[last_name]\n,[first_name]\n,[gender]\n,[phone_no]\n,[hkid]\n,[duration]\n,[monthly_charge]\n,[voucher_amount]\n,[contract_sum]\n,[gender_totalsum_rank]\n FROM [dbo].[Customer]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "DedicatedPool1",
						"poolName": "DedicatedPool1"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Notebook 1')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "MySparkPool",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "eeaba494-c17b-4106-9dec-b5acccb2b740"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/ef6d64e9-c558-4834-b4c6-00d1f4906fb5/resourceGroups/learningsynapseresourcegrp/providers/Microsoft.Synapse/workspaces/my-first-synapse-learning-workspace/bigDataPools/MySparkPool",
						"name": "MySparkPool",
						"type": "Spark",
						"endpoint": "https://my-first-synapse-learning-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/MySparkPool",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.2",
						"nodeCount": 10,
						"cores": 4,
						"memory": 28,
						"automaticScaleJobs": false
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"df = spark.read.load('abfss://users@datalakeforlearningasa.dfs.core.windows.net/personal_info.parquet', format='parquet')\r\n",
							"display(df.limit(10))"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"spark.sql(\"CREATE DATABASE IF NOT EXISTS sparkdb\")\r\n",
							"df.write.mode(\"overwrite\").saveAsTable(\"sparkdb.personalinfo\")"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"df = spark.read.load('abfss://users@datalakeforlearningasa.dfs.core.windows.net/NYCTripSmall.parquet', format='parquet')\r\n",
							"display(df.limit(5))"
						],
						"outputs": [],
						"execution_count": 11
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"df = spark.sql(\"\"\"\r\n",
							"   SELECT PassengerCount,\r\n",
							"       SUM(TripDistanceMiles) as SumTripDistance,\r\n",
							"       AVG(TripDistanceMiles) as AvgTripDistance\r\n",
							"   FROM nyctaxi.trip\r\n",
							"   WHERE TripDistanceMiles > 0 AND PassengerCount > 0\r\n",
							"   GROUP BY PassengerCount\r\n",
							"\"\"\") \r\n",
							"display(df)"
						],
						"outputs": [],
						"execution_count": 9
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/MySparkPool')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 5
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 3,
					"minNodeCount": 3
				},
				"nodeCount": 10,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.2",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastasia"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DedicatedPool1')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastasia"
		}
	]
}